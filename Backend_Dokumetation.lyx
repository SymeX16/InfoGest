#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman "default" "Comfortaa"
\font_sans "default" "Comfortaa"
\font_typewriter "default" "Comfortaa"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 1.5cm
\rightmargin 2.5cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Dokumetation
\end_layout

\begin_layout Author
Entwicklung des Backends
\end_layout

\begin_layout Date
Stand: 03/02/22
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
Autoren :
\end_layout

\begin_layout Standard
\noindent
\align center
Jan Händl
\end_layout

\begin_layout Standard
\noindent
\align center
Dustin Heyer
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
frontmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
backmatter
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\end_inset


\end_layout

\begin_layout Left Footer

\end_layout

\begin_layout Left Header

\end_layout

\begin_layout Right Header

\end_layout

\begin_layout Center Header

\end_layout

\begin_layout Right Footer

\end_layout

\begin_layout Section
Zielbestimmung
\end_layout

\begin_layout Standard
Entwickelt des Backend.
 Das inkludiert das festlegen der Werkzeuge, das Erstellen von Speicherstrucktur
en und das nachvollziehbare Dokumentieren der Arbeit.
 
\end_layout

\begin_layout Section
Toolaufstellung
\end_layout

\begin_layout Standard
In Folge zeigen und Begründen wir unsere Toolauswahl für die einzelnen Teilberei
che des Projektes.
\end_layout

\begin_layout Subsection
Server/ Online-Speicher
\end_layout

\begin_layout Standard
Die beschränkte Auswahl ist auf die folgenden drei Optionen gefallen.
 Zum einen aus Erfahrung und zum anderen damit von jeder Speicher Möglichkeit
 ein Vertreter aufgeführt ist.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minio
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Express
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
MongoDB
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorrangiger Einsatz
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cloud Storage
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rest API
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DB Speicherung
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorteil
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Umgang mit großen Datenmengen
\end_layout

\begin_layout Plain Layout
Docker
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Schnelles Aufsetzten und einsetzten
\end_layout

\begin_layout Plain Layout
Node.js
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JSON Format speicherbar
\end_layout

\begin_layout Plain Layout
Docker
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erfahrung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dustin vorhanden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Jan vorhanden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Die Wahl wird hier von unserem Einsatz-Specktrum bestimmt.
 Damit entscheiden wir uns gegen Mongo DB.
 Extra eine solche Datenbank aufzusetzen wäre zu viel Aufwand und die Funktional
ität von MongoDB zu mächtig für unsere Zwecke.
 Es wäre Unverhältnismäßig.
 Somit werde wir, Wie sich oben aus der Tabelle ergibt, alle Daten in Minio
 Ablegen und Speichern.
 Express nutzen wir dann für alle zusätzlichen Funktionalitäten welche nicht
 auf Minio umgesetzt werden kann.
 
\end_layout

\begin_layout Subsection
Auswerten von Daten
\end_layout

\begin_layout Standard
R vs.
 SPSS vs.
 Python vs.
 Excel
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="1.5cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
R
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SPSS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Python
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exel
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorteile
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Statistiksoftware
\end_layout

\begin_layout Plain Layout
Viele Pakete
\end_layout

\begin_layout Plain Layout
Gut für komplexe Statistik 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alt
\end_layout

\begin_layout Plain Layout
Hat die gängigsten Methoden (ausgereift) 
\end_layout

\begin_layout Plain Layout
meist aber im Bereich der Sozialwissenschaft genutzt 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allzweckwaffe
\end_layout

\begin_layout Plain Layout
Viele Tools 
\end_layout

\begin_layout Plain Layout
Pandas Datenanalyse
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
nur einfache statistische Aufgaben möglich
\end_layout

\begin_layout Plain Layout
Add in Datenanalyse
\end_layout

\begin_layout Plain Layout
Macros nutzbar 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Hier schließen wir die ersten zwei Optionen aus.
 Diese wären erneut unverhältnismaßig Komplex für unser Projekt.
 Damit bleiben uns noch Python und Exel.
 Wobei wir erstmal bei beiden bleiben können.
 Python können wir nutzen um einen neuen Server-Stack aufzusetzen welcher
 aktuelle Auswertungen durchführt oder passiv, auf Bedarf, Datenanalysen
 durchführt.
 Exel würde nur passiv genutzt werden ist aber unsere Backup Lösung.
\end_layout

\begin_layout Subsection
Anwendungsmöglichkeiten
\end_layout

\begin_layout Standard
Hier zählen wir die vier gängigsten Applikationmöglichkeiten vor und wägen
 ab welche Option für uns am passensten ist.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="1.5cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<column alignment="left" valignment="top" width="3cm">
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Webapplikation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
normale Applikation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Handy App
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eigenes Tool
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allgemein
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
leicht zu Entwickelnbekanntester Bereich
\end_layout

\begin_layout Plain Layout
Html-Auszug möglich
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auf dem Computer nutzbar 
\end_layout

\begin_layout Plain Layout
Näher an xApi 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Direkt fürs Handy 
\end_layout

\begin_layout Plain Layout
Am nächsten am Nutzer und der xApi 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Am schwersten zu machen
\end_layout

\begin_layout Plain Layout
Entwicklung + Elektronik und BS 
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
unsere Möglichkeiten
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
React, Angular,VoeJS
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Elektron, Java (AWT)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Android Studio
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
/
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Erstmal werden wir alles als Webapplikation entwickeln.
 Dort ist die meiste Erfahrung vorhanden und somit der bester Fortschritt
 zu erwarten.
 Außerdem existieren Applikationen zum Umwandeln von Wepapp-Code zur den
 Anderen Applikationstypen, womit mehreres auf einmal erreicht werden kann.
\end_layout

\begin_layout Subsection
Webapplikationen
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="2cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<column alignment="left" valignment="top" width="4cm">
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
React
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Angular
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VueJS
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Basis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Open-Source JavaScript-Bibliothek
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entwicklungsplattform, die auf dem Typeskript basiert
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
JavaScript-Framework
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
standart Einsatz
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
React wird verwendet, um UI-Komponenten in jeder App mit häufig variablen
 Daten zu erstellen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Angular wird hauptsächlich verwendet, um komplexe Apps für Unternehmen wie
 Single-Page-Apps und progressive Web-Apps zu erstellen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Progressivität und inkrementelle Einsetzbarkeit
\end_layout

\begin_layout Plain Layout
Setzt mehr auf HTML
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lernkurve
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
moderat aufgrund kleiner Package-Größe
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
steil aufgrund vieler eingebauten Funktionalitäten
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
flache Lernkurve
\end_layout

\begin_layout Plain Layout
vorsicht vor Spagetti-Code
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptargument
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Flexibilität
\end_layout

\begin_layout Plain Layout
Großes Ökosystem
\end_layout

\begin_layout Plain Layout
Kleine Teams
\end_layout

\begin_layout Plain Layout
Viel Wahlfreiheit bei den benutzbaren Packages 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
TypeScript
\end_layout

\begin_layout Plain Layout
Große Comunity
\end_layout

\begin_layout Plain Layout
Für große Apps
\end_layout

\begin_layout Plain Layout
Objekt orientiert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Großes Ökosystem
\end_layout

\begin_layout Plain Layout
Keine langwierigen Build-Prozesse
\end_layout

\begin_layout Plain Layout
keine Syntaxerweiterungen wie TypeScript oder JSX
\end_layout

\end_inset
</cell>
</row>
<row topspace="0.2cm">
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Erfahrung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vorhanden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
keine
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Diese Entscheidung ist die komplizierteste.
 Da mit jeder der drei Optionen unser Ziel erreicht werden kann.
 Anhand der Fakten entscheiden wir uns gegen Angular.
 Es müste neu gelernt werden und ist eher für größere Projekte als unseres
 gedacht.
 Somit behindert es eher den Prozess anstatt ihn zu unterstützen.
 Weiterhin entscheiden wir uns auch gegen VueJS da es durch den Fokus auf
 HTML nicht in unsere Hauptintension passt.
 Damit entscheiden wir uns für React, da vorallem die oben gelisteten Hauptargum
ente zu unserer Aufgabe und Projektgruppe passt.
 Zusätlich ist keine weitere Einarbeitungszeit nötig und Erfahrung vorhanden.
 
\end_layout

\end_body
\end_document
